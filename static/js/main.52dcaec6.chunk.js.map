{"version":3,"sources":["App.js","services/list.js","reportWebVitals.js","index.js"],"names":["App","useState","itemInput","setItemInput","list","setList","alert","setAlert","mounted","useEffect","length","fetch","then","data","json","items","setTimeout","className","map","item","id","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","type","onChange","event","target","value","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAoEeA,MA9Df,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAuBF,mBAAS,IAAhC,mBAAMG,EAAN,KAAYC,EAAZ,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACIC,GAAU,EAwCd,OAtCAC,qBAAW,WACT,IAAGL,EAAKM,QAAWJ,EAQnB,OCpBOK,MAAM,8BACZC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UDcTF,MAAK,SAAAG,GACVP,GACDH,EAAQU,MAGL,kBAAMP,GAAU,KACtB,CAACF,EAAOF,IAEXK,qBAAW,WACNH,GACDU,YAAW,WACNR,GACHD,GAAS,KAER,OAEJ,CAACD,IAmBF,sBAAKW,UAAU,UAAf,UACC,iDACA,6BACGb,EAAKc,KAAI,SAAAC,GAAI,OAAI,6BAAmBA,EAAKA,MAAfA,EAAKC,SAEhCd,GAAS,wDACX,uBAAMe,SAvBY,SAACC,GC7BjB,IAAiBH,ED8BpBG,EAAEC,kBC9BkBJ,ED+BZjB,EC9BDS,MAAM,6BAA6B,CACtCa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACT,WAEzBP,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WDwBlBF,MAAK,WACJT,EAAa,IACbI,GAAS,OAkBV,UACE,kCACE,yCACA,uBAAOsB,KAAK,OAAOC,SAhBL,SAACC,GACpB5B,EAAa4B,EAAMC,OAAOC,OAC1BC,QAAQC,IAAIjC,IAcoC+B,MAAO/B,OAEpD,wBAAQ2B,KAAK,SAAb,2BElDQO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.52dcaec6.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport './App.css';\n\nimport { getList, setItem } from './services/list';\n\nfunction App() {\n  const [itemInput, setItemInput] = useState('');\n  const[list, setList] = useState([]);\n  const [alert, setAlert] = useState(false);\n  let mounted = true;\n\n  useEffect (() => {\n    if(list.length && !alert) {\n      return;\n    }\n    getList().then(items => {\n      if(mounted){\n        setList(items)\n      }\n    })\n    return () => mounted = false;\n  }, [alert, list])\n\n  useEffect (() => {\n    if(alert){\n      setTimeout(()=>{\n        if(mounted){\n        setAlert(false);\n        }\n      }, 1000)\n    }\n  }, [alert])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setItem(itemInput)\n    .then(() => {\n      setItemInput('');\n      setAlert(true);\n    }\n   )\n  };\n\n  const handleChange = (event) => {\n    setItemInput(event.target.value);\n    console.log(itemInput);\n  }\n\n\n  return (\n    <div className=\"wrapper\">\n     <h1>My Grocery lsit</h1>\n     <ul>\n       {list.map(item => <li key={item.id}>{item.item}</li>)}\n     </ul>\n     { alert && <h2>Submitted Successfully</h2> }\n     <form onSubmit={handleSubmit}>\n       <label>\n         <p>New Item</p>\n         <input type=\"text\" onChange={handleChange} value={itemInput} />\n       </label>\n       <button type=\"submit\">Submit</button>\n     </form>\n    </div>\n  );\n}\n\nexport default App;\n","export function getList() {\r\n    return fetch('http://localhost:3333/list')\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function setItem(item) {\r\n    return fetch('http://localhost:3333/list',{\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({item})\r\n    })\r\n    .then(data => data.json())\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}